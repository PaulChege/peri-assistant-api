version: "3.9"

services:
  db:
    image: postgres:15
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    networks:
      - backend

  redis:
    image: redis:7
    networks:
      - backend

  web:
    image: paulchege/peri-assistant-api:latest   # <-- production image from Docker Hub
    container_name: rails-api
    command: bundle exec rails s -b 0.0.0.0 -p 3000
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      RAILS_ENV: production
      RACK_ENV: production
      REDIS_URL: redis://redis:6379/0
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:5432/${DB_NAME}
    networks:
      - backend

  sidekiq:
    image: paulchege/peri-assistant-api:latest
    container_name: sidekiq
    command: bundle exec sidekiq -r ./config/environment.rb
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      RAILS_ENV: production
      RACK_ENV: production
      REDIS_URL: redis://redis:6379/0
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME} 
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:5432/${DB_NAME}
    networks:
      - backend

volumes:
  db_data:

networks:
  backend: